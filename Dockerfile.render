# PHP 8.2 with Apache for EC-CUBE
FROM php:8.2-apache

# Install system dependencies
RUN apt-get update && apt-get install -y \
    libfreetype6-dev \
    libjpeg62-turbo-dev \
    libpng-dev \
    libzip-dev \
    libicu-dev \
    libpq-dev \
    git \
    unzip \
    curl \
    wait-for-it \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) \
        gd \
        pdo \
        pdo_pgsql \
        pdo_mysql \
        zip \
        intl \
        opcache \
    && pecl install apcu \
    && docker-php-ext-enable apcu \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Install Node.js and npm
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Enable Apache modules
RUN a2enmod rewrite headers expires

# Configure PHP
RUN echo "memory_limit = 512M" >> /usr/local/etc/php/conf.d/docker-php-ram-limit.ini \
    && echo "upload_max_filesize = 20M" >> /usr/local/etc/php/conf.d/docker-php-uploads.ini \
    && echo "post_max_size = 20M" >> /usr/local/etc/php/conf.d/docker-php-uploads.ini \
    && echo "max_execution_time = 300" >> /usr/local/etc/php/conf.d/docker-php-timeout.ini

# Set working directory
WORKDIR /var/www/html

# Copy application files
COPY . .

# Configure Apache
COPY apache-config.conf /etc/apache2/sites-available/000-default.conf

# Create required directories and set permissions
RUN mkdir -p var/cache var/log var/sessions html/upload/save_image html/upload/temp_image \
    && chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html \
    && chmod -R 777 /var/www/html/var /var/www/html/html \
    && chmod +x build.sh start.sh

# Install dependencies
RUN ./build.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

# Expose port
EXPOSE 80

# Create a wrapper script for better debugging
RUN echo '#!/bin/bash' > /entrypoint.sh && \
    echo 'echo "========================================" 2>&1' >> /entrypoint.sh && \
    echo 'echo "CONTAINER STARTING" 2>&1' >> /entrypoint.sh && \
    echo 'echo "Timestamp: $(date)" 2>&1' >> /entrypoint.sh && \
    echo 'echo "Working directory: $(pwd)" 2>&1' >> /entrypoint.sh && \
    echo 'echo "User: $(whoami)" 2>&1' >> /entrypoint.sh && \
    echo 'echo "start.sh exists: $([ -f ./start.sh ] && echo YES || echo NO)" 2>&1' >> /entrypoint.sh && \
    echo 'echo "start.sh is executable: $([ -x ./start.sh ] && echo YES || echo NO)" 2>&1' >> /entrypoint.sh && \
    echo 'echo "========================================" 2>&1' >> /entrypoint.sh && \
    echo 'exec ./start.sh' >> /entrypoint.sh && \
    chmod +x /entrypoint.sh

# Start command
CMD ["/entrypoint.sh"]